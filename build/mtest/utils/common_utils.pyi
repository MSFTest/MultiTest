# from _typeshed import Incomplete

def check_numpy_to_torch(x): ...
def limit_period(val, offset: float = ..., period=...): ...
def drop_info_with_name(info, name): ...
def rotate_points_along_z(points, angle): ...
def mask_points_by_range(points, limit_range): ...
def get_voxel_centers(voxel_coords, downsample_times, voxel_size, point_cloud_range): ...
def create_logger(log_file, rank: int = ..., log_level=...): ...
def set_random_seed(seed) -> None: ...
def get_pad_params(desired_size, cur_size): ...
def keep_arrays_by_name(gt_names, used_classes): ...
def init_dist_slurm(tcp_port, local_rank, backend: str = ...): ...
def init_dist_pytorch(tcp_port, local_rank, backend: str = ...): ...
def get_dist_info(return_gpu_per_machine: bool = ...): ...
def merge_results_dist(result_part, size, tmpdir): ...
def scatter_point_inds(indices, point_inds, shape): ...
def generate_voxel2pinds(sparse_tensor): ...

class AverageMeter:
    def __init__(self) -> None: ...
    val: int
    avg: int
    sum: int
    count: int
    def reset(self) -> None: ...
    def update(self, val, n: int = ...) -> None: ...
